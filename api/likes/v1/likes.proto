syntax = "proto3";

package likes.v1;

import "buf/validate/validate.proto";

option go_package = "github.com/tech-inspire/api-contracts/api/gen/go/likes/v1;likesv1";

service LikesService {
  // Get current likes count for a post
  rpc GetLikesCount(GetLikesCountRequest) returns (GetLikesCountResponse);

  // Check if user liked a post
  rpc HasUserLikedPost(HasUserLikedPostRequest) returns (HasUserLikedPostResponse);

  // Like a post
  rpc LikePost(LikePostRequest) returns (LikePostResponse);

  // Unlike a post
  rpc UnlikePost(UnlikePostRequest) returns (UnlikePostResponse);

  // Get all posts liked by a user
  rpc GetUserLikedPosts(GetUserLikedPostsRequest) returns (GetUserLikedPostsResponse);
}

message GetLikesCountRequest {
  string post_id = 1 [(buf.validate.field).string.uuid = true];
}

message GetLikesCountResponse {
  int64 likes_count = 1;
}

message HasUserLikedPostRequest {
  string user_id = 1 [(buf.validate.field).string.uuid = true];
  string post_id = 2 [(buf.validate.field).string.uuid = true];
}

message HasUserLikedPostResponse {
  bool liked = 1;
}

message LikePostRequest {
  string user_id = 1 [(buf.validate.field).string.uuid = true];
  string post_id = 2 [(buf.validate.field).string.uuid = true];
}

message LikePostResponse {
  bool success = 1;
}

message UnlikePostRequest {
  string user_id = 1 [(buf.validate.field).string.uuid = true];
  string post_id = 2 [(buf.validate.field).string.uuid = true];
}

message UnlikePostResponse {
  bool success = 1;
}

message GetUserLikedPostsRequest {
  string user_id = 1 [(buf.validate.field).string.uuid = true];
  int32 limit = 2; // max number of posts to return
  int32 offset = 3; // skip first N posts
}

message GetUserLikedPostsResponse {
  repeated string post_ids = 1;
}
