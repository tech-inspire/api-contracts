// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
//
// Source: search/v1/search.proto
//

import Connect
import Foundation
import SwiftProtobuf

public protocol Search_V1_SearchServiceClientInterface: Sendable {

    @discardableResult
    func `searchPosts`(request: Search_V1_SearchImagesRequest, headers: Connect.Headers, completion: @escaping @Sendable (ResponseMessage<Search_V1_SearchImagesResponse>) -> Void) -> Connect.Cancelable

    @available(iOS 13, *)
    func `searchPosts`(request: Search_V1_SearchImagesRequest, headers: Connect.Headers) async -> ResponseMessage<Search_V1_SearchImagesResponse>
}

/// Concrete implementation of `Search_V1_SearchServiceClientInterface`.
public final class Search_V1_SearchServiceClient: Search_V1_SearchServiceClientInterface, Sendable {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @discardableResult
    public func `searchPosts`(request: Search_V1_SearchImagesRequest, headers: Connect.Headers = [:], completion: @escaping @Sendable (ResponseMessage<Search_V1_SearchImagesResponse>) -> Void) -> Connect.Cancelable {
        return self.client.unary(path: "/search.v1.SearchService/SearchPosts", idempotencyLevel: .unknown, request: request, headers: headers, completion: completion)
    }

    @available(iOS 13, *)
    public func `searchPosts`(request: Search_V1_SearchImagesRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Search_V1_SearchImagesResponse> {
        return await self.client.unary(path: "/search.v1.SearchService/SearchPosts", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let searchPosts = Connect.MethodSpec(name: "SearchPosts", service: "search.v1.SearchService", type: .unary)
        }
    }
}
