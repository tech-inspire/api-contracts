# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from auth.v1 import auth_pb2 as auth_dot_v1_dot_auth__pb2


class AuthServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/auth.v1.AuthService/Login',
                request_serializer=auth_dot_v1_dot_auth__pb2.LoginRequest.SerializeToString,
                response_deserializer=auth_dot_v1_dot_auth__pb2.SuccessLoginResponse.FromString,
                _registered_method=True)
        self.Register = channel.unary_unary(
                '/auth.v1.AuthService/Register',
                request_serializer=auth_dot_v1_dot_auth__pb2.RegisterRequest.SerializeToString,
                response_deserializer=auth_dot_v1_dot_auth__pb2.RegisterResponse.FromString,
                _registered_method=True)
        self.ConfirmEmail = channel.unary_unary(
                '/auth.v1.AuthService/ConfirmEmail',
                request_serializer=auth_dot_v1_dot_auth__pb2.ConfirmEmailRequest.SerializeToString,
                response_deserializer=auth_dot_v1_dot_auth__pb2.SuccessLoginResponse.FromString,
                _registered_method=True)
        self.RefreshToken = channel.unary_unary(
                '/auth.v1.AuthService/RefreshToken',
                request_serializer=auth_dot_v1_dot_auth__pb2.RefreshTokenRequest.SerializeToString,
                response_deserializer=auth_dot_v1_dot_auth__pb2.SuccessLoginResponse.FromString,
                _registered_method=True)
        self.Logout = channel.unary_unary(
                '/auth.v1.AuthService/Logout',
                request_serializer=auth_dot_v1_dot_auth__pb2.LogoutRequest.SerializeToString,
                response_deserializer=auth_dot_v1_dot_auth__pb2.LogoutResponse.FromString,
                _registered_method=True)
        self.ResetPassword = channel.unary_unary(
                '/auth.v1.AuthService/ResetPassword',
                request_serializer=auth_dot_v1_dot_auth__pb2.ResetPasswordRequest.SerializeToString,
                response_deserializer=auth_dot_v1_dot_auth__pb2.ResetPasswordResponse.FromString,
                _registered_method=True)
        self.ConfirmPasswordReset = channel.unary_unary(
                '/auth.v1.AuthService/ConfirmPasswordReset',
                request_serializer=auth_dot_v1_dot_auth__pb2.ConfirmPasswordResetRequest.SerializeToString,
                response_deserializer=auth_dot_v1_dot_auth__pb2.ConfirmPasswordResetResponse.FromString,
                _registered_method=True)
        self.CheckPasswordResetCode = channel.unary_unary(
                '/auth.v1.AuthService/CheckPasswordResetCode',
                request_serializer=auth_dot_v1_dot_auth__pb2.CheckPasswordResetCodeRequest.SerializeToString,
                response_deserializer=auth_dot_v1_dot_auth__pb2.CheckPasswordResetCodeResponse.FromString,
                _registered_method=True)
        self.GetMe = channel.unary_unary(
                '/auth.v1.AuthService/GetMe',
                request_serializer=auth_dot_v1_dot_auth__pb2.GetMeRequest.SerializeToString,
                response_deserializer=auth_dot_v1_dot_auth__pb2.GetUserResponse.FromString,
                _registered_method=True)
        self.UpdateUser = channel.unary_unary(
                '/auth.v1.AuthService/UpdateUser',
                request_serializer=auth_dot_v1_dot_auth__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=auth_dot_v1_dot_auth__pb2.User.FromString,
                _registered_method=True)
        self.GetUser = channel.unary_unary(
                '/auth.v1.AuthService/GetUser',
                request_serializer=auth_dot_v1_dot_auth__pb2.GetUserRequest.SerializeToString,
                response_deserializer=auth_dot_v1_dot_auth__pb2.GetUserResponse.FromString,
                _registered_method=True)
        self.UploadAvatar = channel.unary_unary(
                '/auth.v1.AuthService/UploadAvatar',
                request_serializer=auth_dot_v1_dot_auth__pb2.UploadUserAvatarRequest.SerializeToString,
                response_deserializer=auth_dot_v1_dot_auth__pb2.UploadUserAvatarResponse.FromString,
                _registered_method=True)


class AuthServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmPasswordReset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckPasswordResetCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadAvatar(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=auth_dot_v1_dot_auth__pb2.LoginRequest.FromString,
                    response_serializer=auth_dot_v1_dot_auth__pb2.SuccessLoginResponse.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=auth_dot_v1_dot_auth__pb2.RegisterRequest.FromString,
                    response_serializer=auth_dot_v1_dot_auth__pb2.RegisterResponse.SerializeToString,
            ),
            'ConfirmEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmEmail,
                    request_deserializer=auth_dot_v1_dot_auth__pb2.ConfirmEmailRequest.FromString,
                    response_serializer=auth_dot_v1_dot_auth__pb2.SuccessLoginResponse.SerializeToString,
            ),
            'RefreshToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshToken,
                    request_deserializer=auth_dot_v1_dot_auth__pb2.RefreshTokenRequest.FromString,
                    response_serializer=auth_dot_v1_dot_auth__pb2.SuccessLoginResponse.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=auth_dot_v1_dot_auth__pb2.LogoutRequest.FromString,
                    response_serializer=auth_dot_v1_dot_auth__pb2.LogoutResponse.SerializeToString,
            ),
            'ResetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetPassword,
                    request_deserializer=auth_dot_v1_dot_auth__pb2.ResetPasswordRequest.FromString,
                    response_serializer=auth_dot_v1_dot_auth__pb2.ResetPasswordResponse.SerializeToString,
            ),
            'ConfirmPasswordReset': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmPasswordReset,
                    request_deserializer=auth_dot_v1_dot_auth__pb2.ConfirmPasswordResetRequest.FromString,
                    response_serializer=auth_dot_v1_dot_auth__pb2.ConfirmPasswordResetResponse.SerializeToString,
            ),
            'CheckPasswordResetCode': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckPasswordResetCode,
                    request_deserializer=auth_dot_v1_dot_auth__pb2.CheckPasswordResetCodeRequest.FromString,
                    response_serializer=auth_dot_v1_dot_auth__pb2.CheckPasswordResetCodeResponse.SerializeToString,
            ),
            'GetMe': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMe,
                    request_deserializer=auth_dot_v1_dot_auth__pb2.GetMeRequest.FromString,
                    response_serializer=auth_dot_v1_dot_auth__pb2.GetUserResponse.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=auth_dot_v1_dot_auth__pb2.UpdateUserRequest.FromString,
                    response_serializer=auth_dot_v1_dot_auth__pb2.User.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=auth_dot_v1_dot_auth__pb2.GetUserRequest.FromString,
                    response_serializer=auth_dot_v1_dot_auth__pb2.GetUserResponse.SerializeToString,
            ),
            'UploadAvatar': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadAvatar,
                    request_deserializer=auth_dot_v1_dot_auth__pb2.UploadUserAvatarRequest.FromString,
                    response_serializer=auth_dot_v1_dot_auth__pb2.UploadUserAvatarResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'auth.v1.AuthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('auth.v1.AuthService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AuthService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/auth.v1.AuthService/Login',
            auth_dot_v1_dot_auth__pb2.LoginRequest.SerializeToString,
            auth_dot_v1_dot_auth__pb2.SuccessLoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/auth.v1.AuthService/Register',
            auth_dot_v1_dot_auth__pb2.RegisterRequest.SerializeToString,
            auth_dot_v1_dot_auth__pb2.RegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfirmEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/auth.v1.AuthService/ConfirmEmail',
            auth_dot_v1_dot_auth__pb2.ConfirmEmailRequest.SerializeToString,
            auth_dot_v1_dot_auth__pb2.SuccessLoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RefreshToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/auth.v1.AuthService/RefreshToken',
            auth_dot_v1_dot_auth__pb2.RefreshTokenRequest.SerializeToString,
            auth_dot_v1_dot_auth__pb2.SuccessLoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/auth.v1.AuthService/Logout',
            auth_dot_v1_dot_auth__pb2.LogoutRequest.SerializeToString,
            auth_dot_v1_dot_auth__pb2.LogoutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/auth.v1.AuthService/ResetPassword',
            auth_dot_v1_dot_auth__pb2.ResetPasswordRequest.SerializeToString,
            auth_dot_v1_dot_auth__pb2.ResetPasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfirmPasswordReset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/auth.v1.AuthService/ConfirmPasswordReset',
            auth_dot_v1_dot_auth__pb2.ConfirmPasswordResetRequest.SerializeToString,
            auth_dot_v1_dot_auth__pb2.ConfirmPasswordResetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckPasswordResetCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/auth.v1.AuthService/CheckPasswordResetCode',
            auth_dot_v1_dot_auth__pb2.CheckPasswordResetCodeRequest.SerializeToString,
            auth_dot_v1_dot_auth__pb2.CheckPasswordResetCodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/auth.v1.AuthService/GetMe',
            auth_dot_v1_dot_auth__pb2.GetMeRequest.SerializeToString,
            auth_dot_v1_dot_auth__pb2.GetUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/auth.v1.AuthService/UpdateUser',
            auth_dot_v1_dot_auth__pb2.UpdateUserRequest.SerializeToString,
            auth_dot_v1_dot_auth__pb2.User.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/auth.v1.AuthService/GetUser',
            auth_dot_v1_dot_auth__pb2.GetUserRequest.SerializeToString,
            auth_dot_v1_dot_auth__pb2.GetUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadAvatar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/auth.v1.AuthService/UploadAvatar',
            auth_dot_v1_dot_auth__pb2.UploadUserAvatarRequest.SerializeToString,
            auth_dot_v1_dot_auth__pb2.UploadUserAvatarResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
