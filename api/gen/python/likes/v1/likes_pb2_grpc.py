# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from likes.v1 import likes_pb2 as likes_dot_v1_dot_likes__pb2


class LikesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetLikesCount = channel.unary_unary(
                '/likes.v1.LikesService/GetLikesCount',
                request_serializer=likes_dot_v1_dot_likes__pb2.GetLikesCountRequest.SerializeToString,
                response_deserializer=likes_dot_v1_dot_likes__pb2.GetLikesCountResponse.FromString,
                _registered_method=True)
        self.HasUserLikedPost = channel.unary_unary(
                '/likes.v1.LikesService/HasUserLikedPost',
                request_serializer=likes_dot_v1_dot_likes__pb2.HasUserLikedPostRequest.SerializeToString,
                response_deserializer=likes_dot_v1_dot_likes__pb2.HasUserLikedPostResponse.FromString,
                _registered_method=True)
        self.LikePost = channel.unary_unary(
                '/likes.v1.LikesService/LikePost',
                request_serializer=likes_dot_v1_dot_likes__pb2.LikePostRequest.SerializeToString,
                response_deserializer=likes_dot_v1_dot_likes__pb2.LikePostResponse.FromString,
                _registered_method=True)
        self.UnlikePost = channel.unary_unary(
                '/likes.v1.LikesService/UnlikePost',
                request_serializer=likes_dot_v1_dot_likes__pb2.UnlikePostRequest.SerializeToString,
                response_deserializer=likes_dot_v1_dot_likes__pb2.UnlikePostResponse.FromString,
                _registered_method=True)
        self.GetUserLikedPosts = channel.unary_unary(
                '/likes.v1.LikesService/GetUserLikedPosts',
                request_serializer=likes_dot_v1_dot_likes__pb2.GetUserLikedPostsRequest.SerializeToString,
                response_deserializer=likes_dot_v1_dot_likes__pb2.GetUserLikedPostsResponse.FromString,
                _registered_method=True)


class LikesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetLikesCount(self, request, context):
        """Get current likes count for a post
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasUserLikedPost(self, request, context):
        """Check if user liked a post
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LikePost(self, request, context):
        """Like a post
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnlikePost(self, request, context):
        """Unlike a post
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserLikedPosts(self, request, context):
        """Get all posts liked by a user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LikesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetLikesCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLikesCount,
                    request_deserializer=likes_dot_v1_dot_likes__pb2.GetLikesCountRequest.FromString,
                    response_serializer=likes_dot_v1_dot_likes__pb2.GetLikesCountResponse.SerializeToString,
            ),
            'HasUserLikedPost': grpc.unary_unary_rpc_method_handler(
                    servicer.HasUserLikedPost,
                    request_deserializer=likes_dot_v1_dot_likes__pb2.HasUserLikedPostRequest.FromString,
                    response_serializer=likes_dot_v1_dot_likes__pb2.HasUserLikedPostResponse.SerializeToString,
            ),
            'LikePost': grpc.unary_unary_rpc_method_handler(
                    servicer.LikePost,
                    request_deserializer=likes_dot_v1_dot_likes__pb2.LikePostRequest.FromString,
                    response_serializer=likes_dot_v1_dot_likes__pb2.LikePostResponse.SerializeToString,
            ),
            'UnlikePost': grpc.unary_unary_rpc_method_handler(
                    servicer.UnlikePost,
                    request_deserializer=likes_dot_v1_dot_likes__pb2.UnlikePostRequest.FromString,
                    response_serializer=likes_dot_v1_dot_likes__pb2.UnlikePostResponse.SerializeToString,
            ),
            'GetUserLikedPosts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserLikedPosts,
                    request_deserializer=likes_dot_v1_dot_likes__pb2.GetUserLikedPostsRequest.FromString,
                    response_serializer=likes_dot_v1_dot_likes__pb2.GetUserLikedPostsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'likes.v1.LikesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('likes.v1.LikesService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class LikesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetLikesCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/likes.v1.LikesService/GetLikesCount',
            likes_dot_v1_dot_likes__pb2.GetLikesCountRequest.SerializeToString,
            likes_dot_v1_dot_likes__pb2.GetLikesCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HasUserLikedPost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/likes.v1.LikesService/HasUserLikedPost',
            likes_dot_v1_dot_likes__pb2.HasUserLikedPostRequest.SerializeToString,
            likes_dot_v1_dot_likes__pb2.HasUserLikedPostResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LikePost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/likes.v1.LikesService/LikePost',
            likes_dot_v1_dot_likes__pb2.LikePostRequest.SerializeToString,
            likes_dot_v1_dot_likes__pb2.LikePostResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnlikePost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/likes.v1.LikesService/UnlikePost',
            likes_dot_v1_dot_likes__pb2.UnlikePostRequest.SerializeToString,
            likes_dot_v1_dot_likes__pb2.UnlikePostResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserLikedPosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/likes.v1.LikesService/GetUserLikedPosts',
            likes_dot_v1_dot_likes__pb2.GetUserLikedPostsRequest.SerializeToString,
            likes_dot_v1_dot_likes__pb2.GetUserLikedPostsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
